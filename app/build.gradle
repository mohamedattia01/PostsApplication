plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.postsapplication'
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        applicationId "com.example.postsapplication"
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            debuggable = true
            buildConfigField("String", "BASE_URL", BASE_URL)
        }

        release {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", BASE_URL)
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.databinding:databinding-runtime:8.0.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'

    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")
    // To use Kotlin Symbol Processing (KSP)
    kapt("androidx.room:room-compiler:$room_version")

    //paging
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")
    //Kotlin
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("androidx.core:core-ktx:$core_ktx")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_kotlinx_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_kotlinx_version")
    //AppCompat
    implementation "androidx.appcompat:appcompat:$appcompat"
    //Material Design
    implementation "com.google.android.material:material:$material"
    //Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    //Legacy Support
    implementation "androidx.legacy:legacy-support-v4:$legacy_support"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    //Hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "com.google.android.gms:play-services-maps:$service_map_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    ////Gson
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter"
    //Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    //Espresso, Junit,mockito
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    androidTestImplementation "androidx.test:rules:$androidx_test_runner"
    testImplementation "org.mockito:mockito-core:$mockito_test"
    androidTestImplementation "org.mockito:mockito-android:$mockito_test"
    testImplementation("junit:junit:$junit")
    androidTestImplementation "androidx.test.ext:junit:$ext_junit"
    // For instrumented tests using hilt.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.38.1")
    // ...with Kotlin using hilt.
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:2.38.1")

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'
    //Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation ('com.github.bumptech.glide:okhttp3-integration:4.8.0'){
        exclude group: 'glide-parent'
    }

    // Dependencies for local unit tests
    testImplementation "androidx.arch.core:core-testing:$local_unit_test"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$core_test"
    testImplementation "androidx.test.ext:junit:$junit_test"

    // small testing library for kotlinx.coroutines Flow.
    testImplementation 'app.cash.turbine:turbine:0.6.1'
    testImplementation "org.robolectric:robolectric:4.6.1"

    // Dependencies for local unit tests
    testImplementation "androidx.arch.core:core-testing:$local_unit_test"
    //Test
    //Mockito
    testImplementation "org.mockito:mockito-core:$mockito_test"
    androidTestImplementation "org.mockito:mockito-android:$mockito_test"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    //Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    //Runner/Rules
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    androidTestImplementation "androidx.test:rules:$androidx_test_runner"
    //SSP and SDP  scalable size unit
    implementation "com.intuit.sdp:sdp-android:$scalable_unit_version"
    implementation "com.intuit.ssp:ssp-android:$scalable_unit_version"

    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"

    implementation "com.google.android.gms:play-services-auth:$google_play_services"
    implementation "com.google.android.gms:play-services-auth-api-phone:$google_play_api_phone"

    //Pref
    implementation "androidx.preference:preference-ktx:$pref_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation("androidx.core:core-splashscreen:$splashScreenVersion")
}

kapt {
    correctErrorTypes true
}